name: 🚀 Deploy workflow on test environment

on:
  push:
    branches: ['release/**', 'release']

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 코드 복사
      - name: check out the repo
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          
          echo "KAKAO_CLIENT_ID=${{secrets.KAKAO_CLIENT_ID}}" >> .env
          echo "KAKAO_REDIRECT_URI=${{secrets.KAKAO_REDIRECT_URI}}" >> .env
          
          echo "GOOGLE_CLIENT_ID=${{secrets.GOOGLE_CLIENT_ID}}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{secrets.GOOGLE_CLIENT_SECRET}}" >> .env
          echo "GOOGLE_REDIRECT_URI=${{GOOGLE_REDIRECT_URI}}" >> .env
          
          echo "NAVER_CLIENT_ID=${{NAVER_CLIENT_ID}}" >> .env
          echo "NAVER_CLIENT_SECRET=${{NAVER_CLIENT_SECRET}}" >> .env
          echo "NAVER_REDIRECT_URI=${{NAVER_REDIRECT_URI}}" >> .env
          
          echo "JWT_SECRET=${{JWT_SECRET}}" >> .env
          echo "JWT_ACCESS_EXPIRATION=${{JWT_ACCESS_EXPIRATION}}" >> .env
          echo "JWT_ACCESS_COOKIE=${{JWT_ACCESS_COOKIE}}" >> .env
          echo "JWT_REFRESH_EXPIRATION=${{JWT_REFRESH_EXPIRATION}}" >> .env
          echo "JWT_REFRESH_COOKIE=${{JWT_REFRESH_COOKIE}}" >> .env
          
          echo "DATASOURCE_URL=${{DATASOURCE_URL}}" >> .env
          echo "GENERATE_DDL=${{GENERATE_DDL}}" >> .env
          echo "DATABASE_USERNAME=${{DATABASE_USERNAME}}" >> .env
          echo "DATABASE_PASSWORD=${{DATABASE_PASSWORD}}" >> .env
          
          echo "DDL_AUTO=${{DDL_AUTH}}" >> .env
          
          echo "REDIS_HOST=${{REDIS_HOST}}" >> .env
          echo "REDIS_PORT=${{REDIS_PORT}}" >> .env

      # 도커 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Docker 이미지 빌드
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/mos:${{ github.sha }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/mos:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/mos:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/mos:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/mos:latest 

      # AWS 자격 증명
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # 배포 시작
      - name: 🚀 Deploy to EC2 with CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name mos-deployer \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name mos-release \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }} 
